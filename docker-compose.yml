version: '3.8'

services:
  db_order:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: orders
    ports:
      - "5432:5432"
    volumes:
      - orders_data:/var/lib/postgresql/data
    restart: always

  db_inventory:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: inventory
    ports:
      - "5433:5432"
    volumes:
      - inventory_data:/var/lib/postgresql/data
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  inventory-service:
    build: ./inventory_service
    container_name: inventory-service
    environment:
      DATABASE_URL: postgresql://admin:admin123@db_inventory:5432/inventory
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - db_inventory
    ports:
      - "8001:8000"

  order-service1:
    build: ./order_service
    container_name: order-service1
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      INVENTORY_SERVICE_URL: http://inventory-service:8000
      DATABASE_URL: postgresql://admin:admin123@db_order:5432/orders
    ports:
      - "8002:8000"
    restart: always

  order-service2:
    build: ./order_service
    container_name: order-service2
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      INVENTORY_SERVICE_URL: http://inventory-service:8000
      DATABASE_URL: postgresql://admin:admin123@db_order:5432/orders
    ports:
      - "8004:8000"
    restart: always

  notification-service:
    build: ./notifications_service
    container_name: notification-service
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MAILTRAP_USER=9314a7dd39cffd
      - MAILTRAP_PASS=2617cf4f458d96
      - TO_EMAIL=gcristianati@gmail.com
    ports:
      - "8003:8000"

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - order-service1
      - order-service2
volumes:
  inventory_data:
  orders_data:
